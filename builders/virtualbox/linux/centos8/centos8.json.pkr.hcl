variable "memsize" {
  type    = string
  default = "8096"
}

variable "numvcpus" {
  type    = string
  default = "1"
}

variable "bridge_adapter" {
  type    = string
  default = "Marvell AQtion 5Gbit Network Adapter"
}

variable "output_directory"{
  type    = string
  #default = "packer-virtualbox-centos8"
  default = "E://Servers//Virtualbox//packer-virtualbox-centos8"
}

variable "vm_name"{
  type    = string
  default = "centos-8-${legacy_isotime("2006-01-02")}"
}

source "virtualbox-iso" "autogenerated_1" {
  boot_command     = ["e<down><down><end><bs><bs><bs><bs><bs>text ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ks.cfg<leftCtrlOn>x<leftCtrlOff>"]
  boot_wait        = "10s"
  disk_size        = "60000"
  guest_os_type    = "RedHat_64"
  headless         = false
  http_directory   = "http"
  iso_checksum     = "0394ecfa994db75efc1413207d2e5ac67af4f6685b3b896e2837c682221fd6b2"
  iso_url          = "iso/centos-8-x86_64-dvd.iso"
  keep_registered  = "true"
  output_directory = "${var.output_directory}"
  shutdown_command = "echo 'provision'|sudo -S /sbin/halt -h -p"
  ssh_host         = "192.168.0.133"
  ssh_port         = 22
  ssh_username     = "provision"
  ssh_password     = "provision"
  ssh_timeout      = "20m"
  #vm_name          = "centos-8-${legacy_isotime("19970804021400")}"
  vm_name          = "${var.vm_name}"
  vboxmanage       = [
    ["modifyvm", "{{ .Name }}", "--firmware", "EFI"],
    ["modifyvm", "{{ .Name }}", "--spec-ctrl", "on"],
    ["modifyvm", "{{ .Name }}", "--triplefaultreset", "on"],
    ["modifyvm", "{{ .Name }}", "--hwvirtex", "on"],
    ["modifyvm", "{{ .Name }}", "--cpus", "${var.numvcpus}"],
    ["modifyvm", "{{ .Name }}", "--memory", "${var.memsize}"],
    ["modifyvm", "{{.Name}}", "--nic2", "bridged"],
    ["modifyvm", "{{.Name}}", "--bridgeadapter2", "${var.bridge_adapter}"],
    ["modifyvm", "{{.Name}}", "--cableconnected2", "on"]
  ]
}

build {
  sources = ["source.virtualbox-iso.autogenerated_1"]
  # provisioner "shell" {
  #   execute_command = "echo 'provision' | {{ .Vars }} sudo -S -E bash '{{ .Path }}'"
  #   scripts         = ["scripts/OCI.sh"]
  # }
}

